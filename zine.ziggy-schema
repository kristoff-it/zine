root = Zine


struct Zine {
    site: Simple | Multilingual,
    settings: Settings = .{},
}

struct Simple {
    /// Title of the website
    title: bytes,
    /// URL where the website will be hosted.
    /// It must not contain a subpath.
    host_url: bytes,
    /// Set this value if your website is hosted under a subpath of `host_url`.
    ///
    /// `host_url` and `url_prefix_path` are split in order to be able to 
    /// generate correct relative paths. 
    url_path_prefix: bytes = "",
    content_dir_path: bytes = "content",
    assets_dir_path: bytes = "assets",
    layouts_dir_path: bytes = "layouts",
    /// Subpaths in `assets_dir_path` that will be installed unconditionally.
    /// All other assets will be installed only if referenced by a content file
    /// or a layout by calling `$site.asset('foo').link()`.
    ///
    /// Examples of incorrect usage of this field:
    /// - site-wide CSS files (should be `link`ed by templates)
    /// - RSS feeds (should be generated by defining `alternative` pages)
    ///
    /// Examples of correct usage of this field:
    /// - `favicon.ico` and other similar assets auto-discovered by browsers
    static_assets: [bytes] = [],
}

struct Multilingual {
    /// URL where the website will be hosted.
    /// It must not contain a subpath.
    host_url: bytes,
    /// Directory that contains mappings from placeholders to translations,
    /// expressed as Ziggy files.
    ///
    /// Each Ziggy file must be named after the locale it's meant to offer
    /// translations for.
    i18n_dir_path: bytes,
    layouts_dir_path: bytes,
    assets_dir_path: bytes,
    /// Location where site and build assets will be installed. By default
    /// assets will be installed directly in the output location.
    ///
    /// In mulitilingual websites Zine will create a single copy of site
    /// assets which will then be installed at this location. It will be your
    /// duty to then copy this directory elsewhere if needed in your deployment
    /// setup (e.g. when deploying different localized variants to different
    /// hosts). Note that *page* assets will still be installed next to their
    /// relative page.
    assets_prefix_path: bytes = "",
    /// Subpaths in `assets_dir_path` that will be installed unconditionally.
    /// All other assets will be installed only if referenced by a content file
    /// or a layout by using `$site.asset('foo').link()`.
    ///
    /// Examples of incorrect usage of this field:
    /// - site-wide CSS files (should be `link`ed by templates)
    /// - RSS feeds (should be generated by defining `alternative` pages)
    ///
    /// Examples of correct usage of this field:
    /// - `favicon.ico` and other similar assets auto-discovered by browsers
    /// - `CNAME` (used by GitHub Pages when you set a custom domain)
    static_assets: [bytes] = [],
    /// A list of locales of this website.
    ///
    /// For each entry the following values must be unique:
    ///   - `code`
    ///   - `output_prefix_override` (if set) + `host_url_override`
    locales: [Locale],
}

struct Locale {
    /// A language-NATION code, e.g. 'en-US', used to identify each
    /// individual localized variant of the website.
    code: bytes,
    /// A name that identifies this locale, e.g. 'English', 'Italiano'
    name: bytes,
    /// Content dir for this locale,
    content_dir_path: bytes,
    /// Site title for this locale.
    site_title: bytes,
    /// Set to a non-null value when deploying this locale from a dedicated
    /// host (e.g. 'https://us.site.com', 'http://de.site.com').
    ///
    /// It must not contain a subpath.
    host_url_override: ?bytes = null,
    /// |  output_ |     host_     |     resulting    |    resulting    |
    /// |  prefix_ |      url_     |        url       |      path       |
    /// | override |   override    |      prefix      |     prefix      |
    /// | -------- | ------------- | ---------------- | --------------- |
    /// |   null   |      null     | site.com/en-US/  | zig-out/en-US/  |
    /// |   null   | "us.site.com" | us.site.com/     | zig-out/en-US/  |
    /// |   "foo"  |      null     | site.com/foo/    | zig-out/foo/    |
    /// |   "foo"  | "us.site.com" | us.site.com/foo/ | zig-out/foo/    |
    /// |    ""    |      null     | site.com/        | zig-out/        |
    ///
    /// The last case is how you create a default locale.
    output_prefix_override: ?bytes = null,
}

struct Settings {
    /// Enable automatic conversion of simple quotes to left/right quotes in
    /// SuperMD
    autoquote: bool = true,
    /// Enable automatic link detection in SuperMD
    autolink: bool = true,
    /// When enabled, Zine will automatically add 'width' and 'height'
    /// attributes to <img> elements for local assets.
    /// Be aware that setting 'width' and 'heigth' of an image will in some
    /// circumstances cause browsers to distort images.
    ///
    /// This problem can be solved by adding the following CSS code to your
    /// site:
    ///
    /// img {
    ///    height: auto;
    /// }
    autosize: bool = false,
}
